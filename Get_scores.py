from flask import Flask, jsonify, request
import os
import json
from waitress import serve

app = Flask(__name__)

SCORES_FOLDER = "scores_json"

# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á mapping student_id -> seat_no
SEAT_MAP = {
    "40001": 2,
    "40002": 3,
    "40003": 1,
    "40004": 5,
    "40005": 4,
}

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
def load_scores(subject_code, exam_id):
    path = os.path.join(SCORES_FOLDER, subject_code, f"{exam_id}_scores.json")
    if os.path.exists(path):
        with open(path, "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

# ‚úÖ endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏±‡πâ‡∏ô
@app.route("/GetScores", methods=["POST"])
def get_scores():
    subject_code = request.form.get("subject_code")
    exam_id = request.form.get("exam_id")

    if not subject_code or not exam_id:
        return jsonify({"error": "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á subject_code ‡πÅ‡∏•‡∏∞ exam_id ‡πÉ‡∏ô form data"}), 400

    scores = load_scores(subject_code, exam_id)
    result = []

    for sid, score_detail in scores.items():
        seat_no = SEAT_MAP.get(sid, 9999)

        # üîß ‡πÅ‡∏Å‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á dict ‡πÅ‡∏•‡∏∞ int
        if isinstance(score_detail, dict):
            score = score_detail.get("score", 0)
            total = score_detail.get("total", 0)
        else:
            score = score_detail
            total = 0  # ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°

        result.append({
            "student_id": sid,
            "score": score,
            "total": total,
            "seat_no": seat_no
        })

    sorted_scores = sorted(result, key=lambda x: x["seat_no"])
    return jsonify(sorted_scores)

if __name__ == "__main__":
    serve(app, host="0.0.0.0", port=5004)